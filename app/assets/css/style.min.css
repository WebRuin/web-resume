/*!
 * resume
 * Web resume
 * https://tim-smith-resume.surge.sh/
 * @author Tim Smith
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;background:#555;color:#fff}.header{padding-bottom:1rem;border-bottom:4px solid #fff;background:#333}.header,.header .left{display:-ms-flexbox;display:flex}.header .left{-ms-flex-direction:column;flex-direction:column;padding:2rem}.header .left p{font-size:1.75rem}.header .left p strong{font-weight:700}.header .left div{width:15%}.header .right{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:2rem}.header .right h2{font-size:2.5rem}.header .header-contact{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;padding:1.5rem 0}.header .header-contact a{display:block;color:#fff;text-decoration:none;font-size:1.7rem}.header .nav.fixed{position:fixed;background:rgba(51,51,51,.75);padding:1rem 0;border-bottom:3px solid #fff;width:1200px;z-index:2;margin:0 auto}.header .nav ul{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly}.header .nav ul li a{display:block;width:100%;text-decoration:none;color:#fff;padding:.5rem 1rem;font-size:1.75rem}.header h1{color:#fff;text-transform:capitalize;font-size:4rem}.header h2{font-size:2.5rem}.header h3{font-size:2rem}.nav ul{list-style:none}.main .resume{background:#305873;padding-top:2rem}.main .resume-header h2{font-size:2.5rem;text-align:center}.main .skills{padding:1rem}.main .skills h3{font-size:2rem}.main .skills .skills-grid,.main .skills .skills-grid li{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}.main .skills .skills-grid li{width:32%;background:#fff;margin-bottom:1rem;color:#2b4e66;box-shadow:-1px 2px 9px 0 rgba(0,0,0,.75)}.main .skills .skills-grid li .skill{padding:.25rem .5rem}.main .skills .skills-grid li .time{background:#333;padding:.25rem .5rem;color:#fff}.main .work-history h3{font-size:2rem;padding:1rem}.main .work-history .job{margin-bottom:1.5rem;background:#4b88b2;box-shadow:-1px 2px 9px 0 rgba(0,0,0,.75)}.main .work-history .job .job-header{padding:.5rem;background:#203a4c}.main .work-history .job .job-title{padding:.5rem;background:#2b4e66}.main .work-history .job .job-location{padding:.5rem;background:#305873}.main .work-history .job .job-date{padding:.5rem;background:#66b9f2;color:#203a4c}.main .work-history .job .skills,.main .work-history .job .skills li{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}.main .work-history .job .skills li{width:32%;background:#fff;margin-bottom:1rem;color:#2b4e66;padding:.25rem}.main .work-history .job .description{padding:0 1rem 2rem}.main .work-history .job .description li{list-style:disc;margin:.5rem 2rem}.main .about{background:#333;color:#fff;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-direction:row;flex-direction:row}.main .about .left{padding-top:4rem}.main .about .left p{position:relative;padding:0 1.5rem;font-size:1.75rem;color:#fff;z-index:1}.main .about .left p:last-of-type{padding:0 1.5rem 2rem}.main .about .right img{display:block;width:74%;margin:0 0 -2rem auto;transform:scaleX(-1);filter:FlipH;-ms-filter:"FlipH"}.main .about .about-header{width:100%;position:relative;font-size:3rem;z-index:1;text-shadow:0 0 10px #000}.main .about .about-header h2{color:#fff;font-size:3rem;text-align:center}.main .portfolio{background:#2b4e66}.main .portfolio .portfolio-header{position:relative}.main .portfolio .portfolio-header h2{color:#fff;font-size:3rem;text-align:center;padding:2rem 0 1rem}.main .portfolio .portfolio-wrapper{width:100%;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.main .portfolio .portfolio-peice{width:45%;margin:1rem;background:#305873;margin-bottom:2rem;box-shadow:-1px 2px 9px 0 rgba(0,0,0,.75)}.main .portfolio .portfolio-peice .portfilio-peice-header{padding:1rem;background:#203a4c}.main .portfolio .portfolio-peice .portfilio-peice-header h3 a{color:#fff;text-decoration:none;font-size:1.5rem}.main .portfolio .portfolio-peice img{max-width:100%}.main .portfolio .portfolio-peice p{padding:1rem;background:#66b9f2;color:#203a4c;font-size:1.7rem}.main .contact{background:#333;padding-top:2rem}.main .contact .contact-wrapper{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:space-evenly;justify-content:space-evenly;padding-bottom:2rem}.main .contact .contact-wrapper li{display:-ms-flexbox;display:flex;width:25%;margin:0 2rem;text-align:center}.main .contact .contact-wrapper li a{color:#fff;padding-left:1rem;text-decoration:none;text-align:center}.footer{background:#333;padding:0 2rem 2rem;text-align:center}::-moz-selection{background:#333;color:#fff;text-shadow:none}::selection{background:#333;color:#fff;text-shadow:none}@media only screen and (min-width:320px){.header{color:#fff;-ms-flex-direction:column;flex-direction:column}.header .left{-ms-flex-order:2;order:2}.header .left h1{display:block;width:100%}.header .right{-ms-flex-order:1;order:1;padding-bottom:0}.header .header-contact{-ms-flex-order:3;order:3;-ms-flex-direction:column;flex-direction:column;text-align:center}.header .nav{-ms-flex-order:4;order:4}.header .nav.fixed{width:100%}.header .about{padding:2rem}.main .skills .skills-grid li{width:49%}.main .about{padding:3rem}.main .about .left,.main .about .right,.main .portfolio .portfolio-peice{width:100%}}@media only screen and (min-width:480px){.header{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}.header h2{font-size:1.75rem}.header .left{width:60%;-ms-flex-order:1;order:1}.header .right{display:-ms-flexbox;display:flex;text-align:right;-ms-flex-direction:column;flex-direction:column;padding:2rem;width:40%}.header .nav{width:100%}.main .work-history .jobs-wrapper{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:space-evenly;justify-content:space-evenly}.main .work-history .jobs-wrapper .job-header{min-height:94px}.main .work-history .job{width:49%}}@media only screen and (min-width:1280px){.body-wrapper{width:1200px;margin:0 auto}.main .skills .skills-grid li{width:32%}.main .about{padding:4rem 0 0 4rem}.main .about .left{width:60%}.main .about .right{width:40%}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
