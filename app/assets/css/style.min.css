/*!
 * resume
 * Web resume
 * https://tim-smith-resume.surge.sh/
 * @author Tim Smith
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{font-size:62.5%}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;background:#555;color:#fff}.header{padding-bottom:1rem;border-bottom:4px solid #fff;background:#333}.header,.header .left{display:-ms-flexbox;display:flex}.header .left{-ms-flex-direction:column;flex-direction:column;padding:2rem}.header .left p{font-size:1.75rem}.header .left p strong{font-weight:700}.header .left div{width:15%}.header .right{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:2rem}.header .right h2{font-size:2.5rem}.header .header-contact{width:100%;display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly;padding:1.5rem 0}.header .header-contact a{display:block;color:#fff;text-decoration:none;font-size:1.7rem}.header .nav.fixed{position:fixed;background:#333;padding:1rem 0;border-bottom:3px solid #fff;width:1200px;z-index:2;margin:0 auto}.header .nav ul{display:-ms-flexbox;display:flex;-ms-flex-pack:space-evenly;justify-content:space-evenly}.header .nav ul li a{display:block;width:100%;text-decoration:none;color:#fff;padding:.5rem 1rem;font-size:1.75rem}.header h1{color:#fff;text-transform:capitalize;font-size:4rem}.header h2{font-size:2.5rem}.header h3{font-size:2rem}.nav ul{list-style:none}.main .resume{background:#305873}.main .resume-header h2{font-size:2.5rem;text-align:center}.main .skills{padding:1rem}.main .skills h3{font-size:2rem}.main .skills .skills-grid,.main .skills .skills-grid li{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}.main .skills .skills-grid li{width:32%;background:#fff;margin-bottom:1rem;color:#2b4e66;padding:.25rem}.main .work-history h3{font-size:2rem;padding:1rem}.main .work-history .job{margin-bottom:1.5rem;background:#4b88b2;box-shadow:-1px 2px 9px 0 rgba(0,0,0,.75)}.main .work-history .job .job-header{padding:.5rem;background:#203a4c}.main .work-history .job .job-title{padding:.5rem;background:#2b4e66}.main .work-history .job .job-location{padding:.5rem;background:#305873}.main .work-history .job .job-date{padding:.5rem;background:#66b9f2;color:#203a4c}.main .work-history .job .skills,.main .work-history .job .skills li{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:justify;justify-content:space-between}.main .work-history .job .skills li{width:32%;background:#fff;margin-bottom:1rem;color:#2b4e66;padding:.25rem}.main .work-history .job .description{padding:0 1rem 2rem}.main .work-history .job .description li{list-style:disc;margin:.5rem 2rem}.main .about{background:#333;color:#fff;padding:4rem;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-direction:row;flex-direction:row}.main .about .left{width:50%;padding-top:4rem}.main .about .left p{position:relative;padding:0 1.5rem;font-size:1.75rem;color:#fff;z-index:1}.main .about .right{width:50%}.main .about .right img{display:block;width:74%;margin:0 auto}.main .about .about-header{width:100%;position:relative;font-size:3rem;z-index:1;text-shadow:0 0 10px #000}.main .about .about-header h2{color:#fff;font-size:3rem;text-align:center}.main .portfolio{background:#2b4e66}.main .portfolio .portfolio-header{position:relative}.main .portfolio .portfolio-header h2{color:#fff;font-size:3rem;text-align:center;padding:2rem 0 1rem}.main .portfolio .portfolio-wrapper{width:100%;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.main .portfolio .portfolio-peice{width:45%;margin:1rem;background:#305873;margin-bottom:2rem;box-shadow:-1px 2px 9px 0 rgba(0,0,0,.75)}.main .portfolio .portfolio-peice .portfilio-peice-header{padding:1rem;background:#203a4c}.main .portfolio .portfolio-peice .portfilio-peice-header h3 a{color:#fff;text-decoration:none;font-size:1.5rem}.main .portfolio .portfolio-peice img{max-width:100%}.main .portfolio .portfolio-peice p{padding:1rem;background:#66b9f2;color:#203a4c;font-size:1.7rem}.main .contact{background:#333;padding-top:2rem}.main .contact .contact-wrapper{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:space-evenly;justify-content:space-evenly;padding-bottom:2rem}.main .contact .contact-wrapper li{display:-ms-flexbox;display:flex;width:25%;margin:0 2rem;text-align:center}.main .contact .contact-wrapper li a{color:#fff;padding-left:1rem;text-decoration:none;text-align:center}.footer{background:#333;padding:0 2rem 2rem;text-align:center}::-moz-selection{background:#333;color:#fff;text-shadow:none}::selection{background:#333;color:#fff;text-shadow:none}@media only screen and (min-width:320px){.header{color:#fff;-ms-flex-direction:column;flex-direction:column}.header .left{-ms-flex-order:2;order:2}.header .left h1{display:block;width:100%}.header .right{-ms-flex-order:1;order:1;padding-bottom:0}.header .header-contact{-ms-flex-order:3;order:3;-ms-flex-direction:column;flex-direction:column;text-align:center}.header .nav{-ms-flex-order:4;order:4}.header .nav.fixed{width:100%}.header .about{padding:2rem}.main .skills .skills-grid li{width:49%}.main .about{padding:3rem}.main .about .left,.main .about .right,.main .portfolio .portfolio-peice{width:100%}}@media only screen and (min-width:480px){.header{-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}.header h2{font-size:1.75rem}.header .left{width:60%;-ms-flex-order:1;order:1}.header .right{display:-ms-flexbox;display:flex;text-align:right;-ms-flex-direction:column;flex-direction:column;padding:2rem;width:40%}.header .nav{width:100%}.main .work-history .jobs-wrapper{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:space-evenly;justify-content:space-evenly}.main .work-history .jobs-wrapper .job-header{min-height:94px}.main .work-history .job{width:49%}}@media only screen and (min-width:1280px){.body-wrapper{width:1200px;margin:0 auto}.main .skills .skills-grid li{width:32%}.main .about{padding:3rem}.main .about .left,.main .about .right{width:50%}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJtb2R1bGVzL19jbGVhcmZpeC5zY3NzIiwic3R5bGUuY3NzIiwibW9kdWxlcy9fZGVmYXVsdHMuc2NzcyIsIm1vZHVsZXMvX2NvbG9ycy5zY3NzIiwicGFydGlhbHMvX2hlYWRlci5zY3NzIiwicGFydGlhbHMvX25hdi5zY3NzIiwicGFydGlhbHMvX21haW4uc2NzcyIsInBhcnRpYWxzL19mb290ZXIuc2NzcyIsIm1peGlucy9fc2VsZWN0aW9uLnNjc3MiLCJtb2R1bGVzL19taXNjLnNjc3MiLCJtb2R1bGVzL19icmVha3BvaW50cy5zY3NzIiwibW9kdWxlcy9fcHJpbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUtBLDJaQWFDLFNBQVUsQUFDVixVQUFXLEFBQ1gsU0FBVSxBQUNWLGVBQWdCLEFBQ2hCLGFBQWMsQUFDZCx1QkFBeUIsQ0FDekIsQUFFRCw4RUFFQyxhQUFlLENBQ2YsQUFDRCxLQUNDLGFBQWUsQ0FDZixBQUNELE1BQ0MsZUFBaUIsQ0FDakIsQUFDRCxhQUNDLFdBQWEsQ0FDYixBQUNELG9EQUVDLFdBQVksQUFDWixZQUFjLENBQ2QsQUFDRCxNQUNDLHlCQUEwQixBQUMxQixnQkFBa0IsQ0FDbEIsQUFFRCxLQUNJLHFCQUF1QixDQUN4QixBQUNELGlCQUNFLGtCQUFvQixDQUNyQixBQ3RESCwyQkFDRSxZQUFhLEFBQ2IsYUFBZSxDQUNoQixBQUNELFFDc0RFLE1EckRTLENBRFgsQUFTQyxhQUZHLFVBQVksQ0FDYixBRVpILEVBQ0Usc0JBQXVCLEFBQ3ZCLDJCQUE0QixBQUM1QixpQ0FBbUMsQ0FDcEMsQUFDRCxLQUNFLGVBQWlCLENBQ2xCLEFBQ0QsS0FDRSxpREFBc0QsQUFDdEQsZ0JBQ0EsQUNMZSxVQUVMLENESVgsQUVaRCxRQUVFLG9CQUFxQixBQUVyQiw2QkFBK0IsQUFDL0IsZURBYyxDQ0xoQixBQTRGQyxzQkEzRkMsb0JBQUEsQUFBYyxZQUFBLENBRGhCLEFBdUJHLGNBZEMsMEJB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OUIsQUFDRCxZQUVFLHlCQUEyQixDQUM1QixBQUNELGNBQ0UsMkJBQTRCLENBQzdCLEFBQ0Qsa0JBQ0UsNEJBQTZCLENBQzlCLEFBQ0QsNERBR0UsVUFBWSxDQUNiLEFBQ0QsZUFFRSxzQkFBdUIsQUFDdkIsdUJBQXlCLENBQzFCLEFBQ0QsTUFDRSwwQkFBNEIsQ0FDN0IsQUFDRCxPQUVFLHVCQUF5QixDQUMxQixBQUNELElBQ0Usd0JBQTJCLENBQzVCLEFBQ0QsTUFDRSxXQUFjLENBQUEsQUFFaEIsUUFHRSxVQUFXLEFBQ1gsUUFBVSxDQUNYLEFBQ0QsTUFFRSxzQkFBd0IsQ0FDekIsQ0FBQSIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogaHR0cDovL21leWVyd2ViLmNvbS9lcmljL3Rvb2xzL2Nzcy9yZXNldC8gXG4gICB2Mi4wIHwgMjAxMTAxMjZcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXG4qL1xuXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXG5maWd1cmUsIGZpZ2NhcHRpb24sIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHRmb250OiBpbmhlcml0O1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG5cdGRpc3BsYXk6IGJsb2NrO1xufVxuYm9keSB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xufVxub2wsIHVsIHtcblx0bGlzdC1zdHlsZTogbm9uZTtcbn1cbmJsb2NrcXVvdGUsIHEge1xuXHRxdW90ZXM6IG5vbmU7XG59XG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcblx0Y29udGVudDogJyc7XG5cdGNvbnRlbnQ6IG5vbmU7XG59XG50YWJsZSB7XG5cdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG5odG1sIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB9XG4gICosICo6YmVmb3JlLCAqOmFmdGVyIHtcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICB9XG4gIFxuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbi8vIFNDU1MgTUlYSU5TXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AaW1wb3J0ICdtaXhpbnMvX3Bvc2l0aW9uLnNjc3MnO1xuQGltcG9ydCAnbWl4aW5zL19zZWxlY3Rpb24uc2Nzcyc7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuLy8gQ09ORklHIE1PRFVMRVNcbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8vIENvbmZpZyBtb2R1bGVzXG5AaW1wb3J0ICdtb2R1bGVzL19jb2xvcnMuc2Nzcyc7XG5AaW1wb3J0ICdtb2R1bGVzL192YXJzLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9fY2xlYXJmaXguc2Nzcyc7XG5AaW1wb3J0ICdtb2R1bGVzL19kZWZhdWx0cy5zY3NzJztcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4vLyBQQVJUSUFMU1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuQGltcG9ydCAncGFydGlhbHMvX2hlYWRlci5zY3NzJztcbkBpbXBvcnQgJ3BhcnRpYWxzL19uYXYuc2Nzcyc7XG5AaW1wb3J0ICdwYXJ0aWFscy9fc2lkZWJhci5zY3NzJztcbkBpbXBvcnQgJ3BhcnRpYWxzL19tYWluLnNjc3MnO1xuQGltcG9ydCAncGFydGlhbHMvX2Zvb3Rlci5zY3NzJztcblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4vLyBPQkpFQ1RTICYgTU9EVUxFU1xuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuQGltcG9ydCAnbW9kdWxlcy9fYnV0dG9ucy5zY3NzJztcbkBpbXBvcnQgJ21vZHVsZXMvX2lucHV0cy5zY3NzJztcbkBpbXBvcnQgJ21vZHVsZXMvX2xpc3RzLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9fdHlwb2dyYXBoeS5zY3NzJztcbkBpbXBvcnQgJ21vZHVsZXMvX21pc2Muc2Nzcyc7XG5AaW1wb3J0ICdtb2R1bGVzL19hcHAuc2Nzcyc7XG5cbi8vIEVuaGFuY2VtZW50IG1vZHVsZXNcbkBpbXBvcnQgJ21vZHVsZXMvX2JyZWFrcG9pbnRzLnNjc3MnO1xuQGltcG9ydCAnbW9kdWxlcy9fcHJpbnQuc2Nzcyc7XG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuLy8gVkVORE9SXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AaW1wb3J0ICd2ZW5kb3IvX2V4dGVybmFsLnNjc3MnO1xuIiwiJWNsZWFyIHtcbiAgY29udGVudDogJyAnO1xuICBkaXNwbGF5OiB0YWJsZTtcbn1cbi5jbGVhciB7XG4gICp6b29tOiAxO1xuICAmOmJlZm9yZSB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gIH1cbiAgJjphZnRlciB7XG4gICAgQGV4dGVuZCAlY2xlYXI7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn1cbiIsIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxuICAgdjIuMCB8IDIwMTEwMTI2XG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxuKi9cbmh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXG5iLCB1LCBpLCBjZW50ZXIsXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcbmFydGljbGUsIGFzaWRlLCBjYW52YXMsIGRldGFpbHMsIGVtYmVkLFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC1zaXplOiAxMDAlO1xuICBmb250OiBpbmhlcml0O1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSxcbmZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG1lbnUsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7IH1cblxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG4gIGNvbnRlbnQ6ICcnO1xuICBjb250ZW50OiBub25lOyB9XG5cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbi5jbGVhcjpiZWZvcmUsIC5jbGVhcjphZnRlciB7XG4gIGNvbnRlbnQ6ICcgJztcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyIHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5OyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlOyB9XG5cbmJvZHkge1xuICBmb250OiAzMDAgMTNweC8xLjYgJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbDtcbiAgYmFja2dyb3VuZDogIzU1NTtcbiAgY29sb3I6ICNmZmY7IH1cblxuLmhlYWRlciB7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbiAgYm9yZGVyLWJvdHRvbTogI2ZmZiA0cHggc29saWQ7XG4gIGJhY2tncm91bmQ6ICMzMzM7IH1cbiAgLmhlYWRlciAubGVmdCB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAycmVtOyB9XG4gICAgLmhlYWRlciAubGVmdCBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTsgfVxuICAgICAgLmhlYWRlciAubGVmdCBwIHN0cm9uZyB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gICAgLmhlYWRlciAubGVmdCBkaXYge1xuICAgICAgd2lkdGg6IDE1JTsgfVxuICAuaGVhZGVyIC5yaWdodCB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAycmVtOyB9XG4gICAgLmhlYWRlciAucmlnaHQgaDIge1xuICAgICAgZm9udC1zaXplOiAyLjVyZW07IH1cbiAgLmhlYWRlciAuaGVhZGVyLWNvbnRhY3Qge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLW1zLWZsZXgtcGFjazogc3BhY2UtZXZlbmx5O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBwYWRkaW5nOiAxLjVyZW0gMDsgfVxuICAgIC5oZWFkZXIgLmhlYWRlci1jb250YWN0IGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGZvbnQtc2l6ZTogMS43cmVtOyB9XG4gIC5oZWFkZXIgLm5hdi5maXhlZCB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGJhY2tncm91bmQ6ICMzMzM7XG4gICAgcGFkZGluZzogMXJlbSAwO1xuICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAjZmZmO1xuICAgIHdpZHRoOiAxMjAwcHg7XG4gICAgei1pbmRleDogOTk5OTtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAuaGVhZGVyIC5uYXYgdWwge1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLW1zLWZsZXgtcGFjazogc3BhY2UtZXZlbmx5O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsgfVxuICAgIC5oZWFkZXIgLm5hdiB1bCBsaSBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgICAgZm9udC1zaXplOiAxLjc1cmVtOyB9XG4gIC5oZWFkZXIgaDEge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIGZvbnQtc2l6ZTogNHJlbTsgfVxuICAuaGVhZGVyIGgyIHtcbiAgICBmb250LXNpemU6IDIuNXJlbTsgfVxuICAuaGVhZGVyIGgzIHtcbiAgICBmb250LXNpemU6IDJyZW07IH1cblxuLm5hdiB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cblxuLm1haW4gLnJlc3VtZSB7XG4gIGJhY2tncm91bmQ6ICMzMDU4NzM7IH1cblxuLm1haW4gLnJlc3VtZS1oZWFkZXIgaDIge1xuICBmb250LXNpemU6IDIuNXJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5tYWluIC5za2lsbHMge1xuICBwYWRkaW5nOiAxcmVtOyB9XG4gIC5tYWluIC5za2lsbHMgaDMge1xuICAgIGZvbnQtc2l6ZTogMnJlbTsgfVxuICAubWFpbiAuc2tpbGxzIC5za2lsbHMtZ3JpZCB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgLm1haW4gLnNraWxscyAuc2tpbGxzLWdyaWQgbGkge1xuICAgICAgd2lkdGg6IDMyJTtcbiAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgIGNvbG9yOiAjMmI0ZTY2O1xuICAgICAgcGFkZGluZzogMC4yNXJlbTsgfVxuXG4ubWFpbiAud29yay1oaXN0b3J5IGgzIHtcbiAgZm9udC1zaXplOiAycmVtO1xuICBwYWRkaW5nOiAxcmVtOyB9XG5cbi5tYWluIC53b3JrLWhpc3RvcnkgLmpvYiB7XG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcbiAgYmFja2dyb3VuZDogIzRiODhiMjtcbiAgYm94LXNoYWRvdzogLTFweCAycHggOXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuNzUpOyB9XG4gIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYiAuam9iLWhlYWRlciB7XG4gICAgcGFkZGluZzogMC41cmVtO1xuICAgIGJhY2tncm91bmQ6ICMyMDNhNGM7IH1cbiAgLm1haW4gLndvcmstaGlzdG9yeSAuam9iIC5qb2ItdGl0bGUge1xuICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICBiYWNrZ3JvdW5kOiAjMmI0ZTY2OyB9XG4gIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYiAuam9iLWxvY2F0aW9uIHtcbiAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgYmFja2dyb3VuZDogIzMwNTg3MzsgfVxuICAubWFpbiAud29yay1oaXN0b3J5IC5qb2IgLmpvYi1kYXRlIHtcbiAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgYmFja2dyb3VuZDogIzY2YjlmMjtcbiAgICBjb2xvcjogIzIwM2E0YzsgfVxuICAubWFpbiAud29yay1oaXN0b3J5IC5qb2IgLnNraWxscyB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgLm1haW4gLndvcmstaGlzdG9yeSAuam9iIC5za2lsbHMgbGkge1xuICAgICAgd2lkdGg6IDMyJTtcbiAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgIGNvbG9yOiAjMmI0ZTY2O1xuICAgICAgcGFkZGluZzogMC4yNXJlbTsgfVxuICAubWFpbiAud29yay1oaXN0b3J5IC5qb2IgLmRlc2NyaXB0aW9uIHtcbiAgICBwYWRkaW5nOiAwIDFyZW0gMnJlbSAxcmVtOyB9XG4gICAgLm1haW4gLndvcmstaGlzdG9yeSAuam9iIC5kZXNjcmlwdGlvbiBsaSB7XG4gICAgICBsaXN0LXN0eWxlOiBkaXNjO1xuICAgICAgbWFyZ2luOiAwLjVyZW0gMnJlbTsgfVxuXG4ubWFpbiAuYWJvdXQge1xuICBiYWNrZ3JvdW5kOiAjMzMzO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogNHJlbTtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC1tcy1mbGV4LXdyYXA6IHdyYXA7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIC1tcy1mbGV4LWRpcmVjdGlvbjogcm93O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdzsgfVxuICAubWFpbiAuYWJvdXQgLmxlZnQge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZy10b3A6IDRyZW07IH1cbiAgICAubWFpbiAuYWJvdXQgLmxlZnQgcCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiAwIDEuNXJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgei1pbmRleDogMjsgfVxuICAubWFpbiAuYWJvdXQgLnJpZ2h0IHtcbiAgICB3aWR0aDogNTAlOyB9XG4gICAgLm1haW4gLmFib3V0IC5yaWdodCBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogNzQlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLm1haW4gLmFib3V0IC5hYm91dC1oZWFkZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDNyZW07XG4gICAgei1pbmRleDogMjtcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDBweCAxMHB4IGJsYWNrOyB9XG4gICAgLm1haW4gLmFib3V0IC5hYm91dC1oZWFkZXIgaDIge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LXNpemU6IDNyZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLm1haW4gLnBvcnRmb2xpbyB7XG4gIGJhY2tncm91bmQ6ICMyYjRlNjY7IH1cbiAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLWhlYWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLWhlYWRlciBoMiB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDJyZW0gMCAxcmVtIDA7IH1cbiAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLXdyYXBwZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5tYWluIC5wb3J0Zm9saW8gLnBvcnRmb2xpby1wZWljZSB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgICBtYXJnaW46IDFyZW07XG4gICAgYmFja2dyb3VuZDogIzMwNTg3MztcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIGJveC1zaGFkb3c6IC0xcHggMnB4IDlweCAwcHggcmdiYSgwLCAwLCAwLCAwLjc1KTsgfVxuICAgIC5tYWluIC5wb3J0Zm9saW8gLnBvcnRmb2xpby1wZWljZSAucG9ydGZpbGlvLXBlaWNlLWhlYWRlciB7XG4gICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgYmFja2dyb3VuZDogIzIwM2E0YzsgfVxuICAgICAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLXBlaWNlIC5wb3J0ZmlsaW8tcGVpY2UtaGVhZGVyIGgzIGEge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBmb250LXNpemU6IDEuNXJlbTsgfVxuICAgIC5tYWluIC5wb3J0Zm9saW8gLnBvcnRmb2xpby1wZWljZSBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyB9XG4gICAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLXBlaWNlIHAge1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIGJhY2tncm91bmQ6ICM2NmI5ZjI7XG4gICAgICBjb2xvcjogIzIwM2E0YztcbiAgICAgIGZvbnQtc2l6ZTogMS43cmVtOyB9XG5cbi5tYWluIC5jb250YWN0IHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgcGFkZGluZy10b3A6IDJyZW07IH1cbiAgLm1haW4gLmNvbnRhY3QgLmNvbnRhY3Qtd3JhcHBlciB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLW1zLWZsZXgtcGFjazogc3BhY2UtZXZlbmx5O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTsgfVxuICAgIC5tYWluIC5jb250YWN0IC5jb250YWN0LXdyYXBwZXIgbGkge1xuICAgICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgd2lkdGg6IDI1JTtcbiAgICAgIG1hcmdpbjogMCAycmVtO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAubWFpbiAuY29udGFjdCAuY29udGFjdC13cmFwcGVyIGxpIGEge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZDogIzMzMztcbiAgcGFkZGluZzogMCAycmVtIDJyZW0gMnJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0ZvbnQtTmFtZSc7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLmVvdFwiKTtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9mb250LW5hbWUuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvZm9udC1uYW1lLnN2ZyNmb250LW5hbWVcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICMzMzM7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMyMHB4KSB7XG4gIC5oZWFkZXIge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG4gICAgLmhlYWRlciAubGVmdCB7XG4gICAgICAtbXMtZmxleC1vcmRlcjogMjtcbiAgICAgICAgICBvcmRlcjogMjsgfVxuICAgICAgLmhlYWRlciAubGVmdCBoMSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5oZWFkZXIgLnJpZ2h0IHtcbiAgICAgIC1tcy1mbGV4LW9yZGVyOiAxO1xuICAgICAgICAgIG9yZGVyOiAxO1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7IH1cbiAgICAuaGVhZGVyIC5oZWFkZXItY29udGFjdCB7XG4gICAgICAtbXMtZmxleC1vcmRlcjogMztcbiAgICAgICAgICBvcmRlcjogMztcbiAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuaGVhZGVyIC5uYXYge1xuICAgICAgLW1zLWZsZXgtb3JkZXI6IDQ7XG4gICAgICAgICAgb3JkZXI6IDQ7IH1cbiAgICAgIC5oZWFkZXIgLm5hdi5maXhlZCB7XG4gICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLmhlYWRlciAuYWJvdXQge1xuICAgICAgcGFkZGluZzogMnJlbTsgfVxuICAubWFpbiAuc2tpbGxzIC5za2lsbHMtZ3JpZCBsaSB7XG4gICAgd2lkdGg6IDQ5JTsgfVxuICAubWFpbiAuYWJvdXQge1xuICAgIHBhZGRpbmc6IDNyZW07IH1cbiAgICAubWFpbiAuYWJvdXQgLmxlZnQsIC5tYWluIC5hYm91dCAucmlnaHQge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLXBlaWNlIHtcbiAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDgwcHgpIHtcbiAgLmhlYWRlciB7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgLmhlYWRlciBoMiB7XG4gICAgICBmb250LXNpemU6IDEuNzVyZW07IH1cbiAgICAuaGVhZGVyIC5sZWZ0IHtcbiAgICAgIHdpZHRoOiA2MCU7XG4gICAgICAtbXMtZmxleC1vcmRlcjogMTtcbiAgICAgICAgICBvcmRlcjogMTsgfVxuICAgIC5oZWFkZXIgLnJpZ2h0IHtcbiAgICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICB3aWR0aDogNDAlOyB9XG4gICAgLmhlYWRlciAubmF2IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYnMtd3JhcHBlciB7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLW1zLWZsZXgtcGFjazogc3BhY2UtZXZlbmx5O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsgfVxuICAgIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYnMtd3JhcHBlciAuam9iLWhlYWRlciB7XG4gICAgICBtaW4taGVpZ2h0OiA5NHB4OyB9XG4gIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYiB7XG4gICAgd2lkdGg6IDQ5JTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTI4MHB4KSB7XG4gIC5ib2R5LXdyYXBwZXIge1xuICAgIHdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLm1haW4gLnNraWxscyAuc2tpbGxzLWdyaWQgbGkge1xuICAgIHdpZHRoOiAzMiU7IH1cbiAgLm1haW4gLmFib3V0IHtcbiAgICBwYWRkaW5nOiAzcmVtOyB9XG4gICAgLm1haW4gLmFib3V0IC5sZWZ0LCAubWFpbiAuYWJvdXQgLnJpZ2h0IHtcbiAgICAgIHdpZHRoOiA1MCU7IH0gfVxuXG5AbWVkaWEgcHJpbnQge1xuICAqIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjsgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiOyB9XG4gIC5pciBhOmFmdGVyLFxuICBhW2hyZWZePVwiamF2YXNjcmlwdDpcIl06YWZ0ZXIsXG4gIGFbaHJlZl49XCIjXCJdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIlwiOyB9XG4gIHByZSxcbiAgYmxvY2txdW90ZSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzk5OTtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgdGhlYWQge1xuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDsgfVxuICB0cixcbiAgaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgaW1nIHtcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAwLjVjbTsgfVxuICBwLFxuICBoMixcbiAgaDMge1xuICAgIG9ycGhhbnM6IDM7XG4gICAgd2lkb3dzOiAzOyB9XG4gIGgyLFxuICBoMyB7XG4gICAgcGFnZS1icmVhay1hZnRlcjogYXZvaWQ7IH0gfVxuIiwiKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTtcbn1cbmh0bWwge1xuICBmb250LXNpemU6IDYyLjUlO1xufVxuYm9keSB7XG4gIGZvbnQ6IDMwMCAxM3B4LzEuNiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsO1xuICBiYWNrZ3JvdW5kOiAkbGlnaHQtZ3JheTtcbiAgY29sb3I6ICR3aGl0ZTtcbn1cbiIsIiRzbGF0ZS1ibHVlOiAjMmI0ZTY2O1xuJHNsYXRlLWJsdWUtZGFyazogIzIwM2E0YztcbiRzbGF0ZS1ibHVlLWxpZ2h0OiAjMzA1ODczO1xuJGJsdWU6ICM0Yjg4YjI7XG4kYmx1ZS1saWdodDogIzY2YjlmMjtcbiRkYXJrLWdyYXk6ICMzMzM7XG4kbGlnaHQtZ3JheTogIzU1NTtcblxuJHdoaXRlOiAjZmZmOyIsIi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nLWJvdHRvbTogMXJlbTtcbiAgLy8gbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgYm9yZGVyLWJvdHRvbTogJHdoaXRlIDRweCBzb2xpZDtcbiAgYmFja2dyb3VuZDogJGRhcmstZ3JheTtcblxuICAubGVmdCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IDJyZW07XG5cbiAgICBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcblxuICAgICAgc3Ryb25ne1xuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBkaXYge1xuICAgICAgd2lkdGg6IDE1JTtcbiAgICB9XG4gIH1cblxuICAucmlnaHQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAycmVtO1xuXG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgfVxuICB9XG5cbiAgLmhlYWRlci1jb250YWN0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIHBhZGRpbmc6IDEuNXJlbSAwO1xuXG4gICAgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBmb250LXNpemU6IDEuN3JlbTtcbiAgICB9XG4gIH1cblxuICAubmF2IHtcblxuICAgICYuZml4ZWQge1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgYmFja2dyb3VuZDogJGRhcmstZ3JheTtcbiAgICAgIHBhZGRpbmc6IDFyZW0gMDtcbiAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkd2hpdGU7XG4gICAgICB3aWR0aDogMTIwMHB4O1xuICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cblxuICAgIHVsIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcblxuICAgICAgbGkge1xuXG4gICAgICAgIGEge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgIHBhZGRpbmc6IDAuNXJlbSAxcmVtO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMS43NXJlbTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGgxIHtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgfVxuXG4gIGgyIHtcbiAgICBmb250LXNpemU6IDIuNXJlbTtcbiAgfVxuXG4gIGgzIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbn0iLCIubmF2IHtcblxuICB1bCB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgfVxuXG4gIGxpIHtcblxuICB9XG5cbiAgYSB7XG5cbiAgfVxufVxuIiwiLm1haW4ge1xuICAucmVzdW1lIHtcbiAgICBiYWNrZ3JvdW5kOiAkc2xhdGUtYmx1ZS1saWdodDtcbiAgfVxuICAucmVzdW1lLWhlYWRlciB7XG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLnNraWxscyB7XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICBcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDJyZW07XG4gICAgfSBcblxuICAgIC5za2lsbHMtZ3JpZCB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuXG4gICAgICBsaSB7XG4gICAgICAgIHdpZHRoOiAzMiU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICAgIGNvbG9yOiAkc2xhdGUtYmx1ZTtcbiAgICAgICAgcGFkZGluZzogMC4yNXJlbTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAud29yay1oaXN0b3J5IHtcblxuICAgIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIHBhZGRpbmc6IDFyZW07XG4gICAgfVxuXG4gICAgLmpvYiB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxLjVyZW07XG4gICAgICBiYWNrZ3JvdW5kOiAkYmx1ZTtcbiAgICAgIC13ZWJraXQtYm94LXNoYWRvdzogLTFweCAycHggOXB4IDBweCByZ2JhKDAsMCwwLDAuNzUpO1xuICAgICAgLW1vei1ib3gtc2hhZG93OiAtMXB4IDJweCA5cHggMHB4IHJnYmEoMCwwLDAsMC43NSk7XG4gICAgICBib3gtc2hhZG93OiAtMXB4IDJweCA5cHggMHB4IHJnYmEoMCwwLDAsMC43NSk7XG5cbiAgICAgIC5qb2ItaGVhZGVyIHtcbiAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkc2xhdGUtYmx1ZS1kYXJrO1xuICAgICAgfVxuICAgICAgXG4gICAgICAuam9iLXRpdGxlIHtcbiAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkc2xhdGUtYmx1ZTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLmpvYi1sb2NhdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICAgICAgYmFja2dyb3VuZDogJHNsYXRlLWJsdWUtbGlnaHQ7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC5qb2ItZGF0ZSB7XG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJsdWUtbGlnaHQ7XG4gICAgICAgIGNvbG9yOiAkc2xhdGUtYmx1ZS1kYXJrO1xuICAgICAgfVxuXG4gICAgICAuc2tpbGxzIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIFxuICAgICAgICBsaSB7XG4gICAgICAgICAgd2lkdGg6IDMyJTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICAgICAgY29sb3I6ICRzbGF0ZS1ibHVlO1xuICAgICAgICAgIHBhZGRpbmc6IDAuMjVyZW07XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgICAgcGFkZGluZzogMCAxcmVtIDJyZW0gMXJlbTtcblxuICAgICAgICBsaSB7XG4gICAgICAgICAgbGlzdC1zdHlsZTogZGlzYztcbiAgICAgICAgICBtYXJnaW46IDAuNXJlbSAycmVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmFib3V0IHtcbiAgICBiYWNrZ3JvdW5kOiAkZGFyay1ncmF5O1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgcGFkZGluZzogNHJlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93OyBcblxuICAgIC5sZWZ0IHtcbiAgICAgIHdpZHRoOiA1MCU7XG4gICAgICBwYWRkaW5nLXRvcDogNHJlbTtcbiAgICAgIHAge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmc6IDAgMS41cmVtO1xuICAgICAgICBmb250LXNpemU6IDEuNzVyZW07XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIHotaW5kZXg6IDI7XG4gICAgICB9XG4gICAgfVxuICAgIC5yaWdodCB7XG4gICAgICB3aWR0aDogNTAlO1xuXG4gICAgICBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDc0JTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmFib3V0LWhlYWRlciB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgIHotaW5kZXg6IDI7XG4gICAgICB0ZXh0LXNoYWRvdzogMHB4IDBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMSk7XG5cbiAgICAgIGgyIHtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgZm9udC1zaXplOiAzcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnBvcnRmb2xpbyB7XG4gICAgYmFja2dyb3VuZDogJHNsYXRlLWJsdWU7XG4gICAgLnBvcnRmb2xpby1oZWFkZXIge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICBoMiB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwYWRkaW5nOiAycmVtIDAgMXJlbSAwO1xuICAgICAgfVxuICAgIH1cbiAgICAucG9ydGZvbGlvLXdyYXBwZXIge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgIH1cblxuICAgIC5wb3J0Zm9saW8tcGVpY2Uge1xuICAgICAgd2lkdGg6IDQ1JTtcbiAgICAgIG1hcmdpbjoxcmVtO1xuICAgICAgYmFja2dyb3VuZDogJHNsYXRlLWJsdWUtbGlnaHQ7XG4gICAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgICAgLXdlYmtpdC1ib3gtc2hhZG93OiAtMXB4IDJweCA5cHggMHB4IHJnYmEoMCwwLDAsMC43NSk7XG4gICAgICAtbW96LWJveC1zaGFkb3c6IC0xcHggMnB4IDlweCAwcHggcmdiYSgwLDAsMCwwLjc1KTtcbiAgICAgIGJveC1zaGFkb3c6IC0xcHggMnB4IDlweCAwcHggcmdiYSgwLDAsMCwwLjc1KTtcblxuICAgICAgLnBvcnRmaWxpby1wZWljZS1oZWFkZXIge1xuICAgICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkc2xhdGUtYmx1ZS1kYXJrO1xuICAgICAgICBoMyB7XG4gICAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjokd2hpdGU7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNXJlbTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgfVxuXG4gICAgICBwIHtcbiAgICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgICAgYmFja2dyb3VuZDogJGJsdWUtbGlnaHQ7XG4gICAgICAgIGNvbG9yOiAkc2xhdGUtYmx1ZS1kYXJrO1xuICAgICAgICBmb250LXNpemU6IDEuN3JlbTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgXG4gIH1cblxuICAuY29udGFjdCB7XG4gICAgYmFja2dyb3VuZDogJGRhcmstZ3JheTtcbiAgICBwYWRkaW5nLXRvcDogMnJlbTtcbiAgICAuY29udGFjdC13cmFwcGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICAgIHBhZGRpbmctYm90dG9tOiAycmVtO1xuXG4gICAgICBsaSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHdpZHRoOiAyNSU7XG4gICAgICAgIG1hcmdpbjogMCAycmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDFyZW07XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG59IiwiLmZvb3RlciB7XG4gIGJhY2tncm91bmQ6ICRkYXJrLWdyYXk7XG4gIHBhZGRpbmc6IDAgMnJlbSAycmVtIDJyZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iLCJAbWl4aW4gc2VsZWN0aW9uKCRzZWxlY3Rpb24tYmc6ICMzMzMsICRzZWxlY3Rpb24tYzogI2ZmZiwgJHNlbGVjdGlvbi10czogbm9uZSkge1xuICA6Oi1tb3otc2VsZWN0aW9ue1xuICAgIGJhY2tncm91bmQ6ICRzZWxlY3Rpb24tYmc7XG4gICAgY29sb3I6ICRzZWxlY3Rpb24tYztcbiAgICB0ZXh0LXNoYWRvdzogJHNlbGVjdGlvbi10cztcbiAgfVxuICA6OnNlbGVjdGlvbntcbiAgICBiYWNrZ3JvdW5kOiAkc2VsZWN0aW9uLWJnO1xuICAgIGNvbG9yOiAkc2VsZWN0aW9uLWM7XG4gICAgdGV4dC1zaGFkb3c6ICRzZWxlY3Rpb24tdHM7XG4gIH1cbn1cbiIsIkBpbmNsdWRlIHNlbGVjdGlvbigkc2VsZWN0aW9uLWJnOiAjMzMzLCAkc2VsZWN0aW9uLWM6ICNmZmYsICRzZWxlY3Rpb24tdHM6IG5vbmUpO1xuIiwiQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjMyMHB4KSB7XG4gIFxuICAuaGVhZGVye1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuICAgIC5sZWZ0IHtcbiAgICAgIG9yZGVyOiAyO1xuXG4gICAgICBoMSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICBcbiAgICB9XG4gICAgLnJpZ2h0IHtcbiAgICAgIG9yZGVyOiAxO1xuICAgICAgcGFkZGluZy1ib3R0b206IDA7XG4gICAgfVxuXG4gICAgLmhlYWRlci1jb250YWN0IHtcbiAgICAgIG9yZGVyOiAzO1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbiAgICAubmF2IHtcbiAgICAgIG9yZGVyOiA0O1xuXG4gICAgICAmLmZpeGVkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmFib3V0IHtcbiAgICAgIHBhZGRpbmc6IDJyZW07IFxuICAgIH1cblxuICB9XG5cbiAgLm1haW4ge1xuICAgIC5za2lsbHMge1xuICAgICAgLnNraWxscy1ncmlkIHtcbiAgICAgICAgbGkge1xuICAgICAgICAgIHdpZHRoOiA0OSU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLmFib3V0IHtcbiAgICAgIHBhZGRpbmc6IDNyZW07XG5cbiAgICAgIC5sZWZ0LCAucmlnaHQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLm1haW4gLnBvcnRmb2xpbyAucG9ydGZvbGlvLXBlaWNlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ4MHB4KSB7XG5cbiAgLmhlYWRlciB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG5cbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDEuNzVyZW07XG4gICAgfVxuXG4gICAgLmxlZnQge1xuICAgICAgd2lkdGg6IDYwJTtcbiAgICAgIG9yZGVyOiAxXG4gICAgfVxuXG4gICAgLnJpZ2h0IHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgd2lkdGg6IDQwJTtcbiAgICB9XG4gICAgXG4gICAgLm5hdiB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gIH1cblxuICAubWFpbiAud29yay1oaXN0b3J5IC5qb2JzLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuXG4gICAgLmpvYi1oZWFkZXJ7XG4gICAgICBtaW4taGVpZ2h0OiA5NHB4O1xuICAgIH1cbiAgfVxuXG4gIC5tYWluIC53b3JrLWhpc3RvcnkgLmpvYiB7XG4gICAgd2lkdGg6IDQ5JTtcbiAgfVxuXG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NzY4cHgpIHtcbiAgXG4gIFxuXG59XG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTAyNHB4KSB7XG4gIFxuICBcblxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOjExNDBweCkge1xuICBcbiAgXG5cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDoxMjgwcHgpIHtcbiAgXG4gIC5ib2R5LXdyYXBwZXIge1xuICAgIHdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbiAgXG4gIC5tYWluIHtcbiAgICAuc2tpbGxzIHtcbiAgICAgIC5za2lsbHMtZ3JpZCB7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICB3aWR0aDogMzIlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLnBvcnRmb2xpbyB7XG4gICAgICAucG9ydGZvbGlvLXdyYXBwZXIge1xuICAgICAgfVxuICAgIH1cblxuICAgIC5hYm91dCB7XG4gICAgICBwYWRkaW5nOiAzcmVtO1xuXG4gICAgICAubGVmdCwgLnJpZ2h0IHtcbiAgICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0gXG4iLCJAbWVkaWEgcHJpbnQge1xuICAqIHtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtc2hhZG93OiBub25lICFpbXBvcnRhbnQ7XG4gIH1cbiAgYSxcbiAgYTp2aXNpdGVkIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICBhW2hyZWZdOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiAoXCIgYXR0cihocmVmKSBcIilcIjtcbiAgfVxuICBhYmJyW3RpdGxlXTphZnRlciB7XG4gICAgY29udGVudDogXCIgKFwiIGF0dHIodGl0bGUpIFwiKVwiO1xuICB9XG4gIC5pciBhOmFmdGVyLFxuICAgYVtocmVmXj1cImphdmFzY3JpcHQ6XCJdOmFmdGVyLFxuICAgYVtocmVmXj1cIiNcIl06YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gIH1cbiAgcHJlLFxuICBibG9ja3F1b3RlIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICB0aGVhZCB7XG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xuICB9XG4gIHRyLFxuICBpbWcge1xuICAgIHBhZ2UtYnJlYWstaW5zaWRlOiBhdm9pZDtcbiAgfVxuICBpbWcge1xuICAgIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIEBwYWdlIHtcbiAgICBtYXJnaW46IDAuNWNtO1xuICB9XG4gIHAsXG4gIGgyLFxuICBoMyB7XG4gICAgb3JwaGFuczogMztcbiAgICB3aWRvd3M6IDM7XG4gIH1cbiAgaDIsXG4gIGgzIHtcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDtcbiAgfVxufVxuIl19 */
